#!/usr/bin/env node

/**
 * AI Compliance Dashboard - Generated by AI Compliance Installer
 * Real-time status display for compliance monitoring
 */

const fs = require('fs');
const path = require('path');

class AIComplianceDashboard {
  constructor() {
    this.projectRoot = process.cwd();
    this.registryPath = path.join(this.projectRoot, 'function-registry.json');
    this.progressPath = path.join(this.projectRoot, 'progress-log.json');
    this.trackingPath = path.join(this.projectRoot, 'ai-tracking-system.json');
    this.instructionsPath = path.join(this.projectRoot, '.ai-rules-docs/ai-operating-constraints.md');
  }

  loadData() {
    const data = {
      registry: null,
      progress: null,
      tracking: null,
      instructions: null
    };

    try {
      if (fs.existsSync(this.registryPath)) {
        data.registry = JSON.parse(fs.readFileSync(this.registryPath, 'utf8'));
      }
      
      if (fs.existsSync(this.progressPath)) {
        data.progress = JSON.parse(fs.readFileSync(this.progressPath, 'utf8'));
      }
      
      if (fs.existsSync(this.trackingPath)) {
        data.tracking = JSON.parse(fs.readFileSync(this.trackingPath, 'utf8'));
      }
      
      if (fs.existsSync(this.instructionsPath)) {
        data.instructions = fs.readFileSync(this.instructionsPath, 'utf8');
      }
      
    } catch (error) {
      console.error('❌ Failed to load data:', error);
    }

    return data;
  }

  displayDashboard() {
    console.log('📊 AI COMPLIANCE DASHBOARD');
    console.log('=====================================');
    
    const data = this.loadData();
    
    console.log('\n🖥️  SYSTEM STATUS:');
    console.log(`Registry: ${data.registry ? '✅ Active' : '❌ Missing'}`);
    console.log(`Progress: ${data.progress ? '✅ Active' : '❌ Missing'}`);
    console.log(`Tracking: ${data.tracking ? '✅ Active' : '❌ Missing'}`);
    console.log(`Rules: ${data.instructions ? '✅ Active' : '❌ Missing'}`);
    
    if (data.progress) {
      const currentSession = Object.keys(data.progress).find(key => key.startsWith('session_'));
      if (currentSession) {
        const session = data.progress[currentSession];
        console.log('\n📅 CURRENT SESSION:');
        console.log(`Focus: ${session.current_focus || 'Unknown'}`);
        console.log(`Completed Tasks: ${session.completed_tasks?.length || 0}`);
        console.log(`Active Tasks: ${session.active_tasks?.length || 0}`);
      }
    }
    
    if (data.tracking) {
      console.log('\n🎯 COMPLIANCE STATUS:');
      console.log(`Score: ${data.tracking.compliance_history?.[0]?.score || 'Unknown'}%`);
      console.log(`Status: ${data.tracking.compliance_history?.[0]?.status || 'Unknown'}`);
      console.log(`Violations: ${data.tracking.current_session?.violations_detected || 0}`);
    }
    
    console.log('\n=====================================');
  }
}

if (require.main === module) {
  const dashboard = new AIComplianceDashboard();
  dashboard.displayDashboard();
}

module.exports = AIComplianceDashboard;
